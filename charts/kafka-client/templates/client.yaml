# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: kafka-client-job
#   namespace: {{ .Release.Namespace }}
# spec:
#    containers:
#    - name: kafka-client
#      image: {{ .Values.image }}:{{ .Values.imageTag }}
#      command: ["/bin/sh", "-c"]
#      args:
#      - |
#        echo  "create topics"
#        kafka-topics --bootstrap-server {{ .Values.broker }} --topic {{ .Values.topic }} --create --partitions 1 --replication-factor 1 --if-not-exists
#        echo "list topics"
#        kafka-topics --bootstrap-server {{ .Values.broker }} --list
#    restartPolicy: Never



# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: {{ .Values.job.name }}
# spec:
#   template:
#     metadata:
#       name: {{ .Values.job.name }}
#     spec:
#       containers:
#         - name: {{ .Values.job.name }}
#           image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag }}"
#           imagePullPolicy: {{ .Values.job.image.pullPolicy }}
#           command: ["/bin/sh", "-c"]
#           args:
#           - |
#             echo  "create topics"
#             kafka-topics --bootstrap-server {{ .Values.broker }} --topic {{ .Values.topic }} --create --partitions 1 --replication-factor 1 --if-not-exists
#             echo "list topics"
#             kafka-topics --bootstrap-server {{ .Values.broker }} --list
#       restartPolicy: Never


apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.job.name }}
spec:
  schedule: "{{ .Values.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: {{ .Values.job.name }}
            image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag }}"
            command: ["/bin/sh", "-c"]
            args:
            - |
              echo  "create topics"
              kafka-topics --bootstrap-server {{ .Values.broker }} --topic {{ .Values.topic }} --create --partitions 1 --replication-factor 1 --if-not-exists
              # kafka-topics --bootstrap-server {{ .Values.broker }} --topic {{ .Values.topic }}-new --create --partitions 1 --replication-factor 1 --if-not-exists
              # echo "list topics"
              # kafka-topics --bootstrap-server {{ .Values.broker }} --list

              echo "iterating topics"
              {{- range $topic := .Values.job.topics }}
              echo "topic is: {{ $topic.name }}"
              kafka-topics --bootstrap-server {{ .Values.broker }} --topic {{ $topic.name }} --create --partitions {{ $topic.partitions }} --replication-factor {{ $topic.replicationFactor }}
              sleep 30 # Sleep to allow topic creation before proceeding to the next
              {{- end }}
              kafka-topics --bootstrap-server {{ .Values.broker }} --list
              echo "create topic ends"
          restartPolicy: OnFailure